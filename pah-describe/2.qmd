# 研究一: 简单分流型先心病相关PAH患者孕晚期右心功能分析

## 类型

```{r}
library(tidyverse)
library(glue)
library(knitr)
library(gridExtra)
library(gt)
library(knitr) 
library(ggpubr)    # 用于添加统计显著性
library(patchwork) # 用于拼接图形
library(gtsummary) # 用于展示回归表格
library(showtext)
showtext_auto()

# 读取数据
df <- read_csv("./data/没有中文字符的数据-有变量名-孕早中期.csv") # 带有type0的数据
df <- df |> filter(type %in% c("1", "2")) # 有分娩结局
df_name <- read_csv("./data/新-变量注解.csv") |> filter(!is.na(Variable)) # 变量注解文件

df_simple <- df |> filter((V48 == 1 | V49 == 1 | V50 == 1)) # 简单分流型先心病


df_simple |>
  select(V48, V49, V50, V70, V71, V72) |>
  pivot_longer(
    cols = everything(),
    names_to = "variable",
    values_to = "value"
  ) |>
  group_by(variable) |>
  # 计算统计摘要
  summarise(
    n = n(),
    `1` = mean(value == "1", na.rm = TRUE),
    `1(%)` = glue(
      " {sum(value == '1', na.rm = TRUE)} ({round(mean(value == '1', na.rm = TRUE)*100, 2)}%)"
    ),
    `0(%)` = glue(
      " {sum(value == '0', na.rm = TRUE)} ({round(mean(value == '0', na.rm = TRUE)*100, 2)}%)"
    ),
    `NA` = sum(is.na(value)),
  ) |>
  left_join(df_name, join_by(variable == Variable)) |> # 添加变量注解

  # 展示表格
  select(Label, `0(%)`, `1(%)`, `NA`) |>
  kable(caption = glue("纳入人群的的先心病种类及手术情况 (n = {nrow(df_simple)})"))
```

## 术前+术后

```{r}
#| fig-cap: 495名 简单分流型先心病相关PAH患者(术前+术后)孕晚期右心功能变化
#| fig-width: 8
#| fig-height: 16

# 小提琴图
df_simple_long <- df_simple |>
  pivot_longer(
    cols = matches("_(孕前|孕早期|孕中期|孕晚期|产后10天内|产后8周内)$"),
    names_to = c(".value", "week"),
    names_pattern = "(.+)_(.+)",
    values_drop_na = FALSE
  ) |>

  # 选择需要的列
  mutate(
    `week` = factor(
      week,
      levels = c(
        "孕前",
        "孕早期",
        "孕中期",
        "孕晚期",
        "产后10天内",
        "产后8周内"
      )
    ),
    `SPAP` = SPAP,
    `TRV` = TRV,
    `TAPSE` = TAPSE,
    `ln(BNP)` = log(B型钠酸肽),
    `右室前后径` = 超声前后径,
    `右室流出道` = 超声流出道,
    `左室舒末内径` = 超声舒末内径,
    `肺动脉主干径` = 超声主干径,
    `右房面积` = 超声右房,
    `右室面积` = 超声前后径 * 超声流出道,
    .keep = 'none'
  )

# 想要进行的统计比较, 每个元素是一个包含两个组名的向量
my_comparisons <- list(
  c("孕前", "孕晚期"),
  c("孕前", "产后8周内"),
  c("孕晚期", "产后8周内")
)


# 封装绘图函数
violin_box <- function(y) {
  ggplot(df_simple_long, aes(x = week, y = {{ y }})) +
    geom_violin(aes(fill = week), alpha = 0.8) +
    geom_boxplot(width = 0.2, outlier.shape = NA) +
    geom_point(
      size = 0.4,
      alpha = 0.4,
      position = position_jitter(width = 0.15)
    ) +
    stat_summary(
      fun = median,
      geom = "line",
      aes(group = 1),
      color = "red",
      linewidth = 0.5,
      linetype = 5
    ) +
    stat_compare_means(
      comparisons = my_comparisons, # 应用我们定义的比较组
      method = "wilcox.test",       # 使用 Wilcoxon 秩和检验 (t.test 也是一个选项)
      label = "p.signif"            # 显示显著性星号: ns, *, **, ***, ****
      # 如果想直接显示 p 值, 可以用 label = "p.format"
    ) +
    theme_classic() +
    theme(legend.position = "none")
}

# 绘制各个指标的图形
p0_SPAP <- violin_box(SPAP)
p0_TRV <- violin_box(TRV)
p0_TAPSE <- violin_box(TAPSE)
p0_ln_BNP <- violin_box(`ln(BNP)`)
p0_右室前后径 <- violin_box(`右室前后径`)
p0_右室流出道 <- violin_box(`右室流出道`)
p0_左室舒末内径 <- violin_box(`左室舒末内径`)
p0_肺动脉主干径 <- violin_box(`肺动脉主干径`)
p0_右房面积 <- violin_box(`右房面积`)
p0_右室面积 <- violin_box(`右室面积`)

p0_SPAP +
  p0_TRV +
  p0_TAPSE +
  p0_ln_BNP +
  p0_右室前后径 +
  p0_右室流出道 +
  p0_左室舒末内径 +
  p0_肺动脉主干径 +
  p0_右房面积 +
  p0_右室面积 +
  plot_layout(ncol = 2)
```


## 仅术前

```{r}
#| fig-cap: 404 名简单分流型先心病相关PAH患者(术前)孕晚期右心功能变化
#| fig-width: 8
#| fig-height: 16

# 小提琴图
df_simple_long <- df_simple |> # 没有重新命名变量
  filter(
    V70 == 0, V71 == 0, V72 == 0, # 仅保留术前数据
  ) |> 
  pivot_longer(
    cols = matches("_(孕前|孕早期|孕中期|孕晚期|产后10天内|产后8周内)$"),
    names_to = c(".value", "week"),
    names_pattern = "(.+)_(.+)",
    values_drop_na = FALSE
  ) |>

  # 选择需要的列
  mutate(
    `week` = factor(
      week,
      levels = c(
        "孕前",
        "孕早期",
        "孕中期",
        "孕晚期",
        "产后10天内",
        "产后8周内"
      )
    ),
    `SPAP` = SPAP,
    `TRV` = TRV,
    `TAPSE` = TAPSE,
    `ln(BNP)` = log(B型钠酸肽),
    `右室前后径` = 超声前后径,
    `右室流出道` = 超声流出道,
    `左室舒末内径` = 超声舒末内径,
    `肺动脉主干径` = 超声主干径,
    `右房面积` = 超声右房,
    `右室面积` = 超声前后径 * 超声流出道,
    .keep = 'none'
  )

# 想要进行的统计比较, 每个元素是一个包含两个组名的向量
my_comparisons <- list(
  c("孕前", "孕晚期"),
  c("孕前", "产后8周内"),
  c("孕晚期", "产后8周内")
)


# 封装绘图函数
violin_box <- function(y) {
  ggplot(df_simple_long, aes(x = week, y = {{ y }})) +
    geom_violin(aes(fill = week), alpha = 0.8) +
    geom_boxplot(width = 0.2, outlier.shape = NA) +
    geom_point(
      size = 0.4,
      alpha = 0.4,
      position = position_jitter(width = 0.15)
    ) +
    stat_summary(
      fun = median,
      geom = "line",
      aes(group = 1),
      color = "red",
      linewidth = 0.5,
      linetype = 5
    ) +
    stat_compare_means(
      comparisons = my_comparisons, # 应用我们定义的比较组
      method = "wilcox.test",       # 使用 Wilcoxon 秩和检验 (t.test 也是一个选项)
      label = "p.signif"            # 显示显著性星号: ns, *, **, ***, ****
      # 如果想直接显示 p 值, 可以用 label = "p.format"
    ) +
    theme_classic() +
    theme(legend.position = "none")
}

# 绘制各个指标的图形
p0_SPAP <- violin_box(SPAP)
p0_TRV <- violin_box(TRV)
p0_TAPSE <- violin_box(TAPSE)
p0_ln_BNP <- violin_box(`ln(BNP)`)
p0_右室前后径 <- violin_box(`右室前后径`)
p0_右室流出道 <- violin_box(`右室流出道`)
p0_左室舒末内径 <- violin_box(`左室舒末内径`)
p0_肺动脉主干径 <- violin_box(`肺动脉主干径`)
p0_右房面积 <- violin_box(`右房面积`)
p0_右室面积 <- violin_box(`右室面积`)

p0_SPAP +
  p0_TRV +
  p0_TAPSE +
  p0_ln_BNP +
  p0_右室前后径 +
  p0_右室流出道 +
  p0_左室舒末内径 +
  p0_肺动脉主干径 +
  p0_右房面积 +
  p0_右室面积 +
  plot_layout(ncol = 2)
```


## 仅术后

```{r}
#| fig-cap: 81 名简单分流型先心病相关PAH患者(术后)孕晚期右心功能变化
#| fig-width: 8
#| fig-height: 16

# 小提琴图
df_simple_long <- df_simple |> # 没有重新命名变量
  filter(
    V70 == 0 | V71 == 0 | V72 == 0 # 仅保留术后数据
  ) |>
  pivot_longer(
    cols = matches("_(孕前|孕早期|孕中期|孕晚期|产后10天内|产后8周内)$"),
    names_to = c(".value", "week"),
    names_pattern = "(.+)_(.+)",
    values_drop_na = FALSE
  ) |>

  # 选择需要的列
  mutate(
    `week` = factor(
      week,
      levels = c(
        "孕前",
        "孕早期",
        "孕中期",
        "孕晚期",
        "产后10天内",
        "产后8周内"
      )
    ),
    `SPAP` = SPAP,
    `TRV` = TRV,
    `TAPSE` = TAPSE,
    `ln(BNP)` = log(B型钠酸肽),
    `右室前后径` = 超声前后径,
    `右室流出道` = 超声流出道,
    `左室舒末内径` = 超声舒末内径,
    `肺动脉主干径` = 超声主干径,
    `右房面积` = 超声右房,
    `右室面积` = 超声前后径 * 超声流出道,
    .keep = 'none'
  )

# 想要进行的统计比较, 每个元素是一个包含两个组名的向量
my_comparisons <- list(
  c("孕前", "孕晚期"),
  c("孕前", "产后8周内"),
  c("孕晚期", "产后8周内")
)


# 封装绘图函数
violin_box <- function(y) {
  ggplot(df_simple_long, aes(x = week, y = {{ y }})) +
    geom_violin(aes(fill = week), alpha = 0.8) +
    geom_boxplot(width = 0.2, outlier.shape = NA) +
    geom_point(
      size = 0.4,
      alpha = 0.4,
      position = position_jitter(width = 0.15)
    ) +
    stat_summary(
      fun = median,
      geom = "line",
      aes(group = 1),
      color = "red",
      linewidth = 0.5,
      linetype = 5
    ) +
    stat_compare_means(
      comparisons = my_comparisons, # 应用我们定义的比较组
      method = "wilcox.test",       # 使用 Wilcoxon 秩和检验 (t.test 也是一个选项)
      label = "p.signif"            # 显示显著性星号: ns, *, **, ***, ****
      # 如果想直接显示 p 值, 可以用 label = "p.format"
    ) +
    theme_classic() +
    theme(legend.position = "none")
}

# 绘制各个指标的图形
p0_SPAP <- violin_box(SPAP)
p0_TRV <- violin_box(TRV)
p0_TAPSE <- violin_box(TAPSE)
p0_ln_BNP <- violin_box(`ln(BNP)`)
p0_右室前后径 <- violin_box(`右室前后径`)
p0_右室流出道 <- violin_box(`右室流出道`)
p0_左室舒末内径 <- violin_box(`左室舒末内径`)
p0_肺动脉主干径 <- violin_box(`肺动脉主干径`)
p0_右房面积 <- violin_box(`右房面积`)
p0_右室面积 <- violin_box(`右室面积`)

p0_SPAP +
  p0_TRV +
  p0_TAPSE +
  p0_ln_BNP +
  p0_右室前后径 +
  p0_右室流出道 +
  p0_左室舒末内径 +
  p0_肺动脉主干径 +
  p0_右房面积 +
  p0_右室面积 +
  plot_layout(ncol = 2)
```


# 研究二: 妊娠合并PAH患者妊娠不良结局风险预测模型的建立和验证

## 技术路线

![妊娠合并PAH患者妊娠不良结局风险预测模型的建立和验证技术路线](./image/pah028.png)

## 基线描述

```{r}

bad_outcome_clos <- c("V2", "V3", "V4", "V5", "V6", "V7", "V8", "V10")

df_predict <- df %>%
  select(
    starts_with('V'),
    ends_with('_孕早中期')
  ) %>%
  rowwise() %>%
  filter(sum(is.na(c_across(everything()))) <= 35) %>%
  ungroup() %>%
  mutate(
    Y = if_else(rowSums(select(., all_of(bad_outcome_clos)), na.rm = TRUE) == 0, 0, 1)
  )

# 尴尬的是 Y == 1 只有7个
count(df_predict, Y) |>
  kable(caption = glue("尴尬的是 Y == 1 只有 {sum(df_predict$Y == 1)} 个"))
```

```{r}
# 妊娠结局
df_predict_outcome <- df_predict |>
  select(
    Y,
    V10,
    V12,
    V13,
    V14,
    V15,
    V16,
    V18,
    V17,
    V19,
    V44,
    V46,
    V101,
    V102,
    V103,
    V104,
    V105,
    V107,
    V109,
    V110,
    V118,
    V123,
  )


df_predict_outcome |>
  # 转换为长数据
  pivot_longer(
    cols = everything(),
    names_to = "variable",
    values_to = "value"
  ) |>
  group_by(variable) |>

  # 计算统计摘要
  summarise(
    n = n(),
    `1` = mean(value == "1", na.rm = TRUE),
    `1(%)` = glue(
      " {sum(value == '1', na.rm = TRUE)} ({round(mean(value == '1', na.rm = TRUE)*100, 2)}%)"
    ),
    `0(%)` = glue(
      " {sum(value == '0', na.rm = TRUE)} ({round(mean(value == '0', na.rm = TRUE)*100, 2)}%)"
    ),
    `NA` = sum(is.na(value)),
  ) |>
  left_join(df_name, join_by(variable == Variable)) |> # 添加变量注解

  # 展示表格
  select(Label, `0(%)`, `1(%)`, `NA`) |>
  kable(caption = glue("妊娠结局统计摘要 (n = {nrow(df_predict_outcome)})"))
```


```{r}
# 临床基线资料统计摘要
df_predict_general <- df_predict |>
    select(
        V22,
        V23,
        V24,
        V25,
        V27,
        V28,
        V29,
        V30,
        V31,
        V32,
        V33,
        V35,
        V36,
        V37,
        V38,
        V39,
        V40,
        V41,
        V42,
        V43,
        V45,
        V47,
        V48,
        V49,
        V50,
        V51,
        V52,
        V53,
        V54,
        V55,
        V56,
        V57,
        V58,
        V59,
        V60,
        V61,
        V62,
        V63,
        V64,
        V65,
        V66,
        V67,
        V68,
        V69,
        V70,
        V71,
        V72,
        V73,
        V74,
        V75,
        V76,
        V77,
        V78,
        V79,
        V80,
        V81,
        V82,
        V83,
        V84,
        V85,
        V86,
        V87,
        V88,
        V89,
        V90,
        V91,
        V92,
        V93,
        V94,
        V95,
        V96,
        V97,
        V98,
        V99,
        V100,
        V111,
        V112,
        V113,
        V121,
        V122,
    )


df_predict_general |>
    # 转换为长数据
    pivot_longer(
        cols = everything(),
        names_to = "variable",
        values_to = "value"
    ) |>
    group_by(variable) |>

    # 计算统计摘要
    summarise(
        n = n(),
        `1` = mean(value == "1", na.rm = TRUE),
        `1(%)` = glue(
            " {sum(value == '1', na.rm = TRUE)} ({round(mean(value == '1', na.rm = TRUE)*100, 2)}%)"
        ),
        `0(%)` = glue(
            " {sum(value == '0', na.rm = TRUE)} ({round(mean(value == '0', na.rm = TRUE)*100, 2)}%)"
        ),
        `NA` = sum(is.na(value)),
    ) |>
    left_join(df_name, join_by(variable == Variable)) |>  # 添加变量注解

    # 展示表格
    select(Label, `0(%)`, `1(%)`, `NA`) |> 
    kable(caption = glue("临床基线资料统计摘要 (n = {nrow(df_predict_general)})"))
```


```{r}
# 超声及化验基线资料统计摘要
df_predict |>
    select(ends_with("_孕早中期")) |> 
    pivot_longer(
        cols = everything(),
        names_to = "variable",
        values_to = "value"
    ) |>
    group_by(variable) |>

    # 计算统计摘要
    summarise(
        n = n(),
        mean = round(mean(value, na.rm = TRUE), 2),
        median = round(median(value, na.rm = TRUE), 2),
        sd = round(sd(value, na.rm = TRUE), 2),
        `NA` = sum(is.na(value))
    ) |>
    
    # 展示表格
    select(variable, n, mean, sd, median,  `NA`) |>
    kable(caption = glue("超声及化验基线资料统计摘要 (n = {nrow(df_predict)})"))
```


## logistics

![批量单因素logistics回归](./image/%E5%9F%BA%E7%BA%BF.png)

多因素logistics回归结果**还需调整**: 

```{r}
# 整理回归 df
col_bad_outcome <- c("V2", "V3", "V4", "V5", "V6", "V7", "V8", "V10") # 复合Y
col_fct <- c("Y", "V21", "V29", "V32", "V42", "V102") # factor 变量

df_predict <- df %>%
  select(
    starts_with('V'),
    ends_with('_孕早中期')
  ) %>%
  rowwise() %>%
  filter(sum(is.na(c_across(everything()))) <= 35) %>%
  ungroup() %>%
  mutate(
    Y = if_else(
      rowSums(select(., all_of(col_bad_outcome)), na.rm = TRUE) == 0,
      0,
      1
    )
  ) |>
  mutate(across(.cols = all_of(col_fct), .fns = factor)) # factor 变量

# across 的强大用法
# mutate(across(c(Y, starts_with("V")), factor)) 转换所有Y开头的变量为 factor
# mutate(across(where(is.character), factor)) 转换所有字符变量为 factor

# 创建公式
fit_cols <- c(
  "V21",
  "V29",
  "V32",
  "V41",
  "V102",
  # "`超声厚度_孕早中期`",
  # "`超声后壁厚度_孕早中期`",
  # "`超声射血分数_孕早中期`",
  # "`*血小板(PLT)_孕早中期`",
  # "`*血红蛋白(Hb)_孕早中期`",
  # "`*平均血红蛋白浓度(MCHC)_孕早中期`",
  # "`血小板压积(PCT)_孕早中期`",
  # "`同型半胱氨酸(Hcy)测定_孕早中期`",
  # "`*乳酸脱氢酶(LDH)测定_孕早中期`",
  # "`*总钙(Ca)测定_孕早中期`",
  # "`*无机磷(P)测定_孕早中期`",
  # "`*镁(Mg)测定_孕早中期`",
  # "`*总蛋白(TP)测定_孕早中期`",
  # "`*白蛋白(Alb)测定_孕早中期`",
  # "`白蛋白比球蛋白_孕早中期`",
  # "`胆碱脂酶(ChE)测定_孕早中期`",
  # "`游离脂肪酸(FFA)测定_孕早中期`",
  # "`纤维蛋白(原)降解产物(FDP)测定_孕早中期`",
  # "`血浆纤维蛋白原测定（FBG）_孕早中期`",
  # "`血浆D_孕早中期`",
  # "`氧饱和度_孕早中期`",
  # "`钙（血气分析）_孕早中期`",
  # "`氧合血红蛋白分数_孕早中期`",
  # "`碳氧血红蛋白分数_孕早中期`",
  "`SPAP_孕早中期`"
)
response_col <- "Y"
my_formula <- reformulate(termlabels = fit_cols, response = response_col)

# 模型

fit <- glm(my_formula, data = df_predict, family = "binomial")
# nobs(fit) # 样本数
# exponentiate = TRUE 会自动计算 OR 和其置信区间，非常适合 Logistic 回归
tbl_regression(fit, exponentiate = TRUE)
```
